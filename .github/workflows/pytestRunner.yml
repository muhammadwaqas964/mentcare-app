name: Run Python tests

on:
  push:
    branches:
      - main  # Adjust if you want it on a different branch like 'main'

permissions:
  contents: write

env:
  MYSQL_ROOT_PASSWORD: "root_password"
  MYSQL_DATABASE: "my_test_db"

jobs:
  build:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9"]

    steps:
      # Checkout the repository
      - uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -U pytest
          pip install -e .
          pip install webdriver-manager  # Install webdriver-manager to handle the ChromeDriver

      # Build and run Docker containers (Flask & MySQL)
      - name: Start MySQL and Flask Backend
        run: |
          # Create Docker network for MySQL and Flask containers to communicate
          docker network create my-network

          # Start MySQL container
          docker run --network my-network --name mysql-docker -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root_password -e MYSQL_DATABASE=my_test_db -d mysql:8.0
          sleep 30  # Ensure MySQL is ready

          # Start Flask backend in Docker container
          cd ./backend
          docker build -t flask-backend .  # Build the Flask image
          docker run --name flask-backend-container --network my-network -p 5000:5000 flask-backend &
          sleep 60  # Ensure Flask is fully started
          
          # Optionally, start the React frontend (if needed for full E2E testing)
          cd ../frontend
          npm install  # Install frontend dependencies
          npm start &  # Run React frontend in background

      # Run Pytest
      - name: Run Pytest
        run: |
          python -m pytest tests --disable-warnings

      # Run Selenium Tests (ensure the app is fully up before running)
      - name: Run Selenium Tests
        run: |
          # Example of running a simple Selenium test
          python -m pytest tests/test_therapistsurveys.py
          
      # Clean up (stop containers after tests)
      - name: Clean up Docker containers
        run: |
          docker stop flask-backend-container mysql-docker
          docker rm flask-backend-container mysql-docker

